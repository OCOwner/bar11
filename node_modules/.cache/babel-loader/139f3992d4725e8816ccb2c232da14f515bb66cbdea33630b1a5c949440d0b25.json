{"ast":null,"code":"var _jsxFileName = \"/Users/jang-giung/front-End/sindong/blackWork/drink-bar/src/shared/Menu.jsx\";\nimport styled from \"styled-components\";\nimport image1 from \"../../src/assets/image/menu.jpg\";\nimport image2 from \"../../src/assets/image/image13.png\";\nimport image3 from \"../../src/assets/image/image10.jpeg\";\nimport backgroundImage from \"../../src/assets/image/image18.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = ({\n  barName,\n  eng\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [barName !== \"\" ? /*#__PURE__*/_jsxDEV(BarName, {\n      children: [barName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 49\n      }, this), eng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 31\n    }, this) : null, /*#__PURE__*/_jsxDEV(Title, {\n      children: \"MENU\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: image1,\n        alt: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageRow, {\n        children: [/*#__PURE__*/_jsxDEV(Image2, {\n          src: image2,\n          alt: \"servImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Image2, {\n          src: image3,\n          alt: \"servImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Menu;\nexport default Menu;\nconst Container = styled.div`\n    background-image: url(${backgroundImage});\n    background-size: cover; /* 배경 이미지를 컨테이너에 맞춰서 늘리거나 줄입니다 */\n    background-position: center; /* 배경 이미지를 가운데 정렬합니다 */\n    background-repeat: no-repeat; /* 배경 이미지를 반복하지 않습니다 */\n    color: #ffffff;\n    display: flex; // 플렉스 박스로 설정\n    flex-direction: column; // 요소들을 세로로 정렬\n    align-items: center; // 내부 요소들을 수직 축에서 가운데 정렬\n    padding-bottom:20px;\n    display: flex;\n    flex-wrap: wrap;\n`;\n_c2 = Container;\nconst Title = styled.h1`\n    text-align: center;\n`;\n_c3 = Title;\nconst ImageContainer = styled.div`\n    width: 600px;\n`;\n_c4 = ImageContainer;\nconst Image = styled.img`\n    border-radius: 5px;\n    max-width: 60%;\n    height: auto;\n`;\n_c5 = Image;\nconst ImageRow = styled.div`\n    display: flex; // 플렉스 박스로 설정\n    justify-content: center; // 내부 요소들을 가로로 가운데 정렬\n    margin-top: 20px; // 이미지 간의 간격을 위해 상단 여백 추가\n    flex-wrap: wrap; /* 자식 요소들이 한 줄에 다 들어가지 않으면 여러 줄로 나뉘게 설정 */\n`;\n_c6 = ImageRow;\nconst Image2 = styled.img`\n    width: 100%; /* 부모 컨테이너의 너비를 100%로 채우기 */\n    max-width: ${props => props.large ? '850px' : '400px'}; /* 이미지의 최대 너비 제한 */\n    height: auto; /* 비율을 유지하면서 높이를 자동 조정 */\n    border-radius: 20px;\n    margin: 10px;\n    object-fit: cover; /* 비율을 유지하면서 이미지를 잘 맞춰줌 */\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 약간의 그림자 효과 추가 */\n`;\n_c7 = Image2;\nconst BarName = styled.p`\n    font-size: 41px;\n    text-align: center;\n    margin: 0px;\n`;\n_c8 = BarName;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Menu\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"ImageContainer\");\n$RefreshReg$(_c5, \"Image\");\n$RefreshReg$(_c6, \"ImageRow\");\n$RefreshReg$(_c7, \"Image2\");\n$RefreshReg$(_c8, \"BarName\");","map":{"version":3,"names":["styled","image1","image2","image3","backgroundImage","jsxDEV","_jsxDEV","Menu","barName","eng","Container","children","BarName","fileName","_jsxFileName","lineNumber","columnNumber","Title","ImageContainer","Image","src","alt","ImageRow","Image2","_c","div","_c2","h1","_c3","_c4","img","_c5","_c6","props","large","_c7","p","_c8","$RefreshReg$"],"sources":["/Users/jang-giung/front-End/sindong/blackWork/drink-bar/src/shared/Menu.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport image1 from \"../../src/assets/image/menu.jpg\";\nimport image2 from \"../../src/assets/image/image13.png\";\nimport image3 from \"../../src/assets/image/image10.jpeg\";\nimport backgroundImage from \"../../src/assets/image/image18.jpeg\";\n\nconst Menu = ({barName, eng}) => {\n    return (\n        <Container>\n            {barName !== \"\" ? <BarName>{barName}<br/>{eng}</BarName> : null}\n            <Title>MENU</Title>\n            <ImageContainer>\n                <Image src= {image1} alt=\"Menu\"/>\n                <ImageRow>\n                    <Image2 src= {image2} alt=\"servImage\" />\n                    <Image2 src= {image3} alt=\"servImage\" />\n                </ImageRow>\n            </ImageContainer>\n        </Container>\n    );\n}\nexport default Menu;\n\nconst Container = styled.div`\n    background-image: url(${backgroundImage});\n    background-size: cover; /* 배경 이미지를 컨테이너에 맞춰서 늘리거나 줄입니다 */\n    background-position: center; /* 배경 이미지를 가운데 정렬합니다 */\n    background-repeat: no-repeat; /* 배경 이미지를 반복하지 않습니다 */\n    color: #ffffff;\n    display: flex; // 플렉스 박스로 설정\n    flex-direction: column; // 요소들을 세로로 정렬\n    align-items: center; // 내부 요소들을 수직 축에서 가운데 정렬\n    padding-bottom:20px;\n    display: flex;\n    flex-wrap: wrap;\n`;\nconst Title = styled.h1`\n    text-align: center;\n`;\nconst ImageContainer = styled.div`\n    width: 600px;\n`;\nconst Image = styled.img`\n    border-radius: 5px;\n    max-width: 60%;\n    height: auto;\n`;\nconst ImageRow = styled.div`\n    display: flex; // 플렉스 박스로 설정\n    justify-content: center; // 내부 요소들을 가로로 가운데 정렬\n    margin-top: 20px; // 이미지 간의 간격을 위해 상단 여백 추가\n    flex-wrap: wrap; /* 자식 요소들이 한 줄에 다 들어가지 않으면 여러 줄로 나뉘게 설정 */\n`;\nconst Image2 = styled.img`\n    width: 100%; /* 부모 컨테이너의 너비를 100%로 채우기 */\n    max-width: ${(props) =>\n    props.large ? '850px' : '400px'}; /* 이미지의 최대 너비 제한 */\n    height: auto; /* 비율을 유지하면서 높이를 자동 조정 */\n    border-radius: 20px;\n    margin: 10px;\n    object-fit: cover; /* 비율을 유지하면서 이미지를 잘 맞춰줌 */\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 약간의 그림자 효과 추가 */\n`;\nconst BarName = styled.p`\n    font-size: 41px;\n    text-align: center;\n    margin: 0px;\n`;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}