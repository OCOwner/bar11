{"ast":null,"code":"var _jsxFileName = \"/Users/jang-giung/front-End/sindong/blackWork/drink-bar/src/components/header/DeskTopHeader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PATH_URL } from '../../constants/constants';\nimport styled from 'styled-components';\nimport image from '../../assets/image/image14.png';\nimport { FaBars } from 'react-icons/fa'; // 메뉴 아이콘을 위해 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeskTopHeader = () => {\n  _s();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const headerList = [{\n    value: 'Home',\n    path: PATH_URL.HOME\n  }, {\n    value: 'About',\n    path: PATH_URL.ABOUT\n  }, {\n    value: 'Info',\n    path: PATH_URL.INFO\n  }, {\n    value: '오시는길',\n    path: PATH_URL.WELCOME\n  }];\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(LogoLink, {\n      to: PATH_URL.HOME,\n      children: /*#__PURE__*/_jsxDEV(Logo, {\n        src: image,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n      onClick: toggleMenu,\n      children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderContainer, {\n      isOpen: isMenuOpen,\n      children: headerList.map((item, index) => /*#__PURE__*/_jsxDEV(HeaderLink, {\n        to: item.path,\n        activeClassName: \"active\",\n        className: \"header-link\",\n        onClick: () => setIsMenuOpen(false) // 메뉴 클릭 시 닫히도록 설정\n        ,\n        children: item.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(DeskTopHeader, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n_c = DeskTopHeader;\nconst LogoLink = styled(NavLink)``;\n_c2 = LogoLink;\nconst Logo = styled.img`\n  max-width: 100px;\n  height: auto;\n\n  @media (max-width: 768px) {\n    max-width: 80px; // 모바일에서 로고 크기 조정\n  }\n`;\n_c3 = Logo;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 20px;\n  background-color: #ffffff;\n\n  @media (max-width: 768px) {\n    padding: 10px;\n  }\n`;\n_c4 = Container;\nconst MenuIcon = styled.div`\n  display: none;\n  font-size: 1.5em;\n  cursor: pointer;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n_c5 = MenuIcon;\nconst HeaderContainer = styled.div`\n  display: flex;\n  margin-left: auto;\n\n  @media (max-width: 768px) {\n    display: ${props => props.isOpen ? 'flex' : 'none'}; // 메뉴 열림 여부에 따라 표시\n    flex-direction: column;\n    position: absolute;\n    top: 50px; // 로고 아래에 메뉴 배치\n    right: 10px;\n    background-color: #fff;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    padding: 10px;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c6 = HeaderContainer;\nconst HeaderLink = styled(NavLink)`\n  text-decoration: none;\n  color: #333;\n  margin: 0 10px;\n  padding: 10px;\n\n  &.active {\n    font-weight: bold;\n  }\n\n  @media (max-width: 768px) {\n    margin: 5px 0;\n  }\n`;\n_c7 = HeaderLink;\nexport default DeskTopHeader;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DeskTopHeader\");\n$RefreshReg$(_c2, \"LogoLink\");\n$RefreshReg$(_c3, \"Logo\");\n$RefreshReg$(_c4, \"Container\");\n$RefreshReg$(_c5, \"MenuIcon\");\n$RefreshReg$(_c6, \"HeaderContainer\");\n$RefreshReg$(_c7, \"HeaderLink\");","map":{"version":3,"names":["React","useState","NavLink","PATH_URL","styled","image","FaBars","jsxDEV","_jsxDEV","DeskTopHeader","_s","isMenuOpen","setIsMenuOpen","headerList","value","path","HOME","ABOUT","INFO","WELCOME","toggleMenu","Container","children","LogoLink","to","Logo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","MenuIcon","onClick","HeaderContainer","isOpen","map","item","index","HeaderLink","activeClassName","className","_c","_c2","img","_c3","div","_c4","_c5","props","_c6","_c7","$RefreshReg$"],"sources":["/Users/jang-giung/front-End/sindong/blackWork/drink-bar/src/components/header/DeskTopHeader.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PATH_URL } from '../../constants/constants';\nimport styled from 'styled-components';\nimport image from '../../assets/image/image14.png';\nimport { FaBars } from 'react-icons/fa'; // 메뉴 아이콘을 위해 추가\n\nconst DeskTopHeader = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const headerList = [\n    { value: 'Home', path: PATH_URL.HOME },\n    { value: 'About', path: PATH_URL.ABOUT },\n    { value: 'Info', path: PATH_URL.INFO },\n    { value: '오시는길', path: PATH_URL.WELCOME },\n  ];\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return (\n    <Container>\n      <LogoLink to={PATH_URL.HOME}>\n        <Logo src={image} alt=\"logo\" />\n      </LogoLink>\n      <MenuIcon onClick={toggleMenu}>\n        <FaBars />\n      </MenuIcon>\n      <HeaderContainer isOpen={isMenuOpen}>\n        {headerList.map((item, index) => (\n          <HeaderLink\n            key={index}\n            to={item.path}\n            activeClassName=\"active\"\n            className=\"header-link\"\n            onClick={() => setIsMenuOpen(false)} // 메뉴 클릭 시 닫히도록 설정\n          >\n            {item.value}\n          </HeaderLink>\n        ))}\n      </HeaderContainer>\n    </Container>\n  );\n};\n\nconst LogoLink = styled(NavLink)``;\n\nconst Logo = styled.img`\n  max-width: 100px;\n  height: auto;\n\n  @media (max-width: 768px) {\n    max-width: 80px; // 모바일에서 로고 크기 조정\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 20px;\n  background-color: #ffffff;\n\n  @media (max-width: 768px) {\n    padding: 10px;\n  }\n`;\n\nconst MenuIcon = styled.div`\n  display: none;\n  font-size: 1.5em;\n  cursor: pointer;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  margin-left: auto;\n\n  @media (max-width: 768px) {\n    display: ${(props) =>\n      props.isOpen ? 'flex' : 'none'}; // 메뉴 열림 여부에 따라 표시\n    flex-direction: column;\n    position: absolute;\n    top: 50px; // 로고 아래에 메뉴 배치\n    right: 10px;\n    background-color: #fff;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    padding: 10px;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst HeaderLink = styled(NavLink)`\n  text-decoration: none;\n  color: #333;\n  margin: 0 10px;\n  padding: 10px;\n\n  &.active {\n    font-weight: bold;\n  }\n\n  @media (max-width: 768px) {\n    margin: 5px 0;\n  }\n`;\n\nexport default DeskTopHeader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}